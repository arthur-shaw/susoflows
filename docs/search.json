[{"path":"https://arthur-shaw.github.io/susoflows/articles/susoflows.html","id":"authentication","dir":"Articles","previous_headings":"","what":"Authentication","title":"Introduction to susoflows","text":"susoflows packages uses authentication susoapi. set credentials, use susoapi follows: , susoflows functions can use credentials: Alternatively, one can simply specify server, user, password parameters susoflows function.","code":"# set credentials for connecting with the server set_credentials(   server = \"https://example.server\",   user = \"My_API_user1\",   password = \"MySecretPassword2Day\" ) # use those credentials without needing to specify them again action_logs <- get_all_user_logs(   start = \"2021-01-01\",   end = \"2021-04-01\" )"},{"path":"https://arthur-shaw.github.io/susoflows/articles/susoflows.html","id":"usage","dir":"Articles","previous_headings":"","what":"Usage","title":"Introduction to susoflows","text":"susoflows package aims encapsulate common complex Survey Solutions workflows single functions. Functions currently cover two domains: Downloading Monitoring","code":""},{"path":"https://arthur-shaw.github.io/susoflows/articles/susoflows.html","id":"downloading","dir":"Articles","previous_headings":"Usage","what":"Downloading","title":"Introduction to susoflows","text":"single function, one can download questionnaire ID (download_data) questionnaire title (download_matching). single functions, one can download types data one questionnaire (download_all_data_types) data types questionnaires (download_all) data download fails, functions help users recover. download_matching, example, inform user matching questionnaires found, find_matching_qnrs return matching questionnaires order help users refine searches.","code":""},{"path":"https://arthur-shaw.github.io/susoflows/articles/susoflows.html","id":"monitoring","dir":"Articles","previous_headings":"Usage","what":"Monitoring","title":"Introduction to susoflows","text":"single function, one can also collect user action logs. get_all_user_logs, one collects logs data frame. get_last_sync_dates, one collects logs, parses , returns data frame last sync dates interviewer.","code":""},{"path":"https://arthur-shaw.github.io/susoflows/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Arthur Shaw. Author, maintainer.","code":""},{"path":"https://arthur-shaw.github.io/susoflows/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Shaw (2025). susoflows: Executes common workflows Survey Solutions' API. R package version 0.2.1, https://github.com/arthur-shaw/susoflows, https://arthur-shaw.github.io/susoflows/.","code":"@Manual{,   title = {susoflows: Executes common workflows with Survey Solutions' API},   author = {Arthur Shaw},   year = {2025},   note = {R package version 0.2.1, https://github.com/arthur-shaw/susoflows},   url = {https://arthur-shaw.github.io/susoflows/}, }"},{"path":"https://arthur-shaw.github.io/susoflows/index.html","id":"susoflows-","dir":"","previous_headings":"","what":"Execute common workflows with Survey Solutions' API","title":"Execute common workflows with Survey Solutions' API","text":"goal susoflows provide simple functions common complex workflows Survey Solutions. Rather chain together several susoapi commands, use one susoflows command instead.","code":""},{"path":"https://arthur-shaw.github.io/susoflows/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Execute common workflows with Survey Solutions' API","text":"package yet CRAN, can installed via following command:","code":"# install.packages(\"devtools\") devtools::install_github(\"arthur-shaw/susoflows\")"},{"path":"https://arthur-shaw.github.io/susoflows/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Execute common workflows with Survey Solutions' API","text":"Consider downloading data. seemingly simple process involves several steps susoapi: Consider easier, one-step alternative susoflows:","code":"# Step 1: Get the details for the questionnaire of interest # First, First, get info on all questionnaires qnrs <- susoapi::get_questionnaires()  # Then, filter to the questionnaire of interest and extract the questionnaire ID and version number. qnr_id <- qnrs %>%    dplyr::filter(Title == \"Your questionnaire title\") %>%   dplyr::pull(QuestionnaireIdentity)  # Step 2: Start an export job job_id <- susoapi::start_export(   qnr_id = qnr_id,   export_type = \"STATA\" )  # Step 3: Check on the status of the job # is it yet? susoapi::get_export_job_details(job_id = job_id) # is it ready yet? susoapi::get_export_job_details(job_id = job_id) # ... is ready yet? Yes. susoapi::get_export_job_details(job_id = job_id)  # Step 4: Download the export file once the export job is complete susoapi::get_export_file(   job_id = job_id,    path = \"your/file/path/\" )  # Step 5: Repeat the steps above for each version of the questionnaire (if applicable). # For example, imagine that a questionnaire has versions 1 and 2, and # both versions were used to collect data that needs to be exported. # Download data for all questionnaires that match characters in `matches` # Example 1: data for all versions of a questionnaire # Example 2: data for all questionnaires with \"household\" in the title # note: `matches` is a regular expression download_matching(     matches = \"Your questionnaire title\",      export_type = \"STATA\",     path = \"your/file/path/\" )"},{"path":"https://arthur-shaw.github.io/susoflows/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 susoflows authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://arthur-shaw.github.io/susoflows/reference/calc_last_user_sync.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the last sync date in the action log data for each interviewer — calc_last_user_sync","title":"Calculates the last sync date in the action log data for each interviewer — calc_last_user_sync","text":"Returns data frame. Columns contain Contains user ID (UserId) last sync date (last_sync_date). Rows correspond interviewers. NA last_sync_date mean sync action identified action log–start end dates used obtain action logs.","code":""},{"path":"https://arthur-shaw.github.io/susoflows/reference/calc_last_user_sync.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the last sync date in the action log data for each interviewer — calc_last_user_sync","text":"","code":"calc_last_user_sync(df)"},{"path":"https://arthur-shaw.github.io/susoflows/reference/calc_last_user_sync.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the last sync date in the action log data for each interviewer — calc_last_user_sync","text":"df Data frame consisting one user action log.","code":""},{"path":"https://arthur-shaw.github.io/susoflows/reference/calc_last_user_sync.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the last sync date in the action log data for each interviewer — calc_last_user_sync","text":"Data frame .","code":""},{"path":"https://arthur-shaw.github.io/susoflows/reference/delete_in_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete everything inside a target directory — delete_in_dir","title":"Delete everything inside a target directory — delete_in_dir","text":"Delete everything target directory: files, sub-directories, files sub-directories.","code":""},{"path":"https://arthur-shaw.github.io/susoflows/reference/delete_in_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete everything inside a target directory — delete_in_dir","text":"","code":"delete_in_dir(dir)"},{"path":"https://arthur-shaw.github.io/susoflows/reference/delete_in_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete everything inside a target directory — delete_in_dir","text":"dir Character. Path target directory","code":""},{"path":"https://arthur-shaw.github.io/susoflows/reference/delete_in_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete everything inside a target directory — delete_in_dir","text":"Side-effect deleting stale files.","code":""},{"path":"https://arthur-shaw.github.io/susoflows/reference/download_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Download all export types for all questionnaires — download_all","title":"Download all export types for all questionnaires — download_all","text":"Useful project close, function downloads tab-delimited, Stata, SPSS, binary, DDI, Paradata every questionnaire version.","code":""},{"path":"https://arthur-shaw.github.io/susoflows/reference/download_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download all export types for all questionnaires — download_all","text":"","code":"download_all(   interview_status = \"All\",   from = \"\",   to = \"\",   access_token = \"\",   refresh_token = \"\",   storage_type = \"\",   translation_id = \"\",   include_meta = TRUE,   path,   server = Sys.getenv(\"SUSO_SERVER\"),   workspace = Sys.getenv(\"SUSO_WORKSPACE\"),   user = Sys.getenv(\"SUSO_USER\"),   password = Sys.getenv(\"SUSO_PASSWORD\") )"},{"path":"https://arthur-shaw.github.io/susoflows/reference/download_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download all export types for all questionnaires — download_all","text":"interview_status Status interviews export. Values: c(\"\", \"SupervisorAssigned\", \"InterviewerAssigned\", \"Completed\", \"RejectedBySupervisor\", \"ApprovedBySupervisor\", \"RejectedByHeadquarters\", \"ApprovedByHeadquarters\") Start date interviews export. date-time, UTC End date interviews export. date-time, UTC access_token Access token external storage. Relevant external cloud storage destination export file. refresh_token Refresh token external storage.Relevant external cloud storage destination export file. storage_type External storage type, relevant. Values: c(\"Dropbox\", \"OneDrive\", \"GoogleDrive\") translation_id Translation ID variable value labels include export files. include_meta Logical. TRUE, include questionnaire metadata export file. path File path export file downloaded server Full server web address (e.g., https://demo.mysurvey.solutions, https://.domain) workspace Character. Name workspace whose data download. user API user name password API password","code":""},{"path":"https://arthur-shaw.github.io/susoflows/reference/download_all.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download all export types for all questionnaires — download_all","text":"Beware: function may long-running binary data, audio, captured many interviews.","code":""},{"path":"https://arthur-shaw.github.io/susoflows/reference/download_all_types.html","id":null,"dir":"Reference","previous_headings":"","what":"Download all export types for a given questionnaire. — download_all_types","title":"Download all export types for a given questionnaire. — download_all_types","text":"Downloads tab-delimited, Stata, SPSS, binary, DDI, Paradata given questionnaire version.","code":""},{"path":"https://arthur-shaw.github.io/susoflows/reference/download_all_types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download all export types for a given questionnaire. — download_all_types","text":"","code":"download_all_types(   qnr_id,   interview_status = \"All\",   from = \"\",   to = \"\",   access_token = \"\",   refresh_token = \"\",   storage_type = \"\",   translation_id = \"\",   include_meta = TRUE,   path,   server = Sys.getenv(\"SUSO_SERVER\"),   workspace = Sys.getenv(\"SUSO_WORKSPACE\"),   user = Sys.getenv(\"SUSO_USER\"),   password = Sys.getenv(\"SUSO_PASSWORD\") )"},{"path":"https://arthur-shaw.github.io/susoflows/reference/download_all_types.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download all export types for a given questionnaire. — download_all_types","text":"qnr_id Questionnaire ID. Format: qnr_id$version interview_status Status interviews export. Values: c(\"\", \"SupervisorAssigned\", \"InterviewerAssigned\", \"Completed\", \"RejectedBySupervisor\", \"ApprovedBySupervisor\", \"RejectedByHeadquarters\", \"ApprovedByHeadquarters\") Start date interviews export. date-time, UTC End date interviews export. date-time, UTC access_token Access token external storage. Relevant external cloud storage destination export file. refresh_token Refresh token external storage.Relevant external cloud storage destination export file. storage_type External storage type, relevant. Values: c(\"Dropbox\", \"OneDrive\", \"GoogleDrive\") translation_id Translation ID variable value labels include export files. include_meta Logical. TRUE, include questionnaire metadata export file. path File path export file downloaded server Full server web address (e.g., https://demo.mysurvey.solutions, https://.domain) workspace Character. Name workspace whose data download. user API user name password API password","code":""},{"path":"https://arthur-shaw.github.io/susoflows/reference/download_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Download data for a single export job. — download_data","title":"Download data for a single export job. — download_data","text":"Executes full download process single export job.","code":""},{"path":"https://arthur-shaw.github.io/susoflows/reference/download_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download data for a single export job. — download_data","text":"","code":"download_data(   qnr_id,   export_type,   interview_status = \"All\",   from = \"\",   to = \"\",   access_token = \"\",   refresh_token = \"\",   storage_type = \"\",   translation_id = \"\",   include_meta = TRUE,   path,   server = Sys.getenv(\"SUSO_SERVER\"),   workspace = Sys.getenv(\"SUSO_WORKSPACE\"),   user = Sys.getenv(\"SUSO_USER\"),   password = Sys.getenv(\"SUSO_PASSWORD\") )"},{"path":"https://arthur-shaw.github.io/susoflows/reference/download_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download data for a single export job. — download_data","text":"qnr_id Questionnaire ID. Format: qnr_id$version export_type Type data export. Values: c(\"Tabular\", \"STATA\", \"SPSS\", \"Binary\", \"DDI\", \"Paradata\") interview_status Status interviews export. Values: c(\"\", \"SupervisorAssigned\", \"InterviewerAssigned\", \"Completed\", \"RejectedBySupervisor\", \"ApprovedBySupervisor\", \"RejectedByHeadquarters\", \"ApprovedByHeadquarters\") Start date interviews export. date-time, UTC End date interviews export. date-time, UTC access_token Access token external storage. Relevant external cloud storage destination export file. refresh_token Refresh token external storage.Relevant external cloud storage destination export file. storage_type External storage type, relevant. Values: c(\"Dropbox\", \"OneDrive\", \"GoogleDrive\") translation_id Translation ID variable value labels include export files. include_meta Logical. TRUE, include questionnaire metadata export file. path File path export file downloaded server Full server web address (e.g., https://demo.mysurvey.solutions, https://.domain) workspace Character. Name workspace whose data download. user API user name password API password","code":""},{"path":"https://arthur-shaw.github.io/susoflows/reference/download_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download data for a single export job. — download_data","text":"Starts export job. Specifies parameters download job qnr_id, export_type, interview_status,  , , access_token, refresh_token, storage_type, translation_id, include_meta parameters Gets regular updates progress export job. Messages progress. Downloads file desired destination. Use path parameter specify export file saved.","code":""},{"path":"https://arthur-shaw.github.io/susoflows/reference/download_matching.html","id":null,"dir":"Reference","previous_headings":"","what":"Downloads data for questionnaires that match — download_matching","title":"Downloads data for questionnaires that match — download_matching","text":"export file ready, function downloads target directory specified path. file ready, print message describing situation.","code":""},{"path":"https://arthur-shaw.github.io/susoflows/reference/download_matching.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downloads data for questionnaires that match — download_matching","text":"","code":"download_matching(   matches,   export_type,   interview_status = \"All\",   from = \"\",   to = \"\",   access_token = \"\",   refresh_token = \"\",   storage_type = \"\",   translation_id = \"\",   include_meta = TRUE,   path,   server = Sys.getenv(\"SUSO_SERVER\"),   workspace = Sys.getenv(\"SUSO_WORKSPACE\"),   user = Sys.getenv(\"SUSO_USER\"),   password = Sys.getenv(\"SUSO_PASSWORD\") )"},{"path":"https://arthur-shaw.github.io/susoflows/reference/download_matching.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downloads data for questionnaires that match — download_matching","text":"matches Atomic character vector. Character string detected questionnaire title. May string, sub-string, regex. export_type Type data export. Values: c(\"Tabular\", \"STATA\", \"SPSS\", \"Binary\", \"DDI\", \"Paradata\") interview_status Status interviews export. Values: c(\"\", \"SupervisorAssigned\", \"InterviewerAssigned\", \"Completed\", \"RejectedBySupervisor\", \"ApprovedBySupervisor\", \"RejectedByHeadquarters\", \"ApprovedByHeadquarters\") Start date interviews export. date-time, UTC End date interviews export. date-time, UTC access_token Access token external storage. Relevant external cloud storage destination export file. refresh_token Refresh token external storage.Relevant external cloud storage destination export file. storage_type External storage type, relevant. Values: c(\"Dropbox\", \"OneDrive\", \"GoogleDrive\") translation_id Translation ID variable value labels include export files. include_meta Logical. TRUE, include questionnaire metadata export file. path File path export file downloaded server Full server web address (e.g., https://demo.mysurvey.solutions, https://.domain) workspace Character. Name workspace whose data download. user API user name password API password","code":""},{"path":"https://arthur-shaw.github.io/susoflows/reference/find_matching_qnrs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get list of questionnaires with a matching title. — find_matching_qnrs","title":"Get list of questionnaires with a matching title. — find_matching_qnrs","text":"Get data frame questionnaires match character vector provided.","code":""},{"path":"https://arthur-shaw.github.io/susoflows/reference/find_matching_qnrs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get list of questionnaires with a matching title. — find_matching_qnrs","text":"","code":"find_matching_qnrs(   matches,   server = Sys.getenv(\"SUSO_SERVER\"),   workspace = Sys.getenv(\"SUSO_WORKSPACE\"),   user = Sys.getenv(\"SUSO_USER\"),   password = Sys.getenv(\"SUSO_PASSWORD\") )"},{"path":"https://arthur-shaw.github.io/susoflows/reference/find_matching_qnrs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get list of questionnaires with a matching title. — find_matching_qnrs","text":"matches Atomic character vector. Character string detected questionnaire title. May string, sub-string, regex. server Full server web address (e.g., https://demo.mysurvey.solutions, https://.domain) workspace Character. Name workspace whose questionnaires query. user API user name password API password","code":""},{"path":"https://arthur-shaw.github.io/susoflows/reference/find_matching_qnrs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get list of questionnaires with a matching title. — find_matching_qnrs","text":"Data frame matching questionnaires, successful; warning message, successful.","code":""},{"path":"https://arthur-shaw.github.io/susoflows/reference/find_matching_qnrs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get list of questionnaires with a matching title. — find_matching_qnrs","text":"matching questionnaires found, return data frame attributes. attributes can used, among things, find necessary parameters downloading associated data. matching questionnaires found, return warning message. cases, print outcome console information.","code":""},{"path":"https://arthur-shaw.github.io/susoflows/reference/get_all_user_logs.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtains action logs for all interviewer users — get_all_user_logs","title":"Obtains action logs for all interviewer users — get_all_user_logs","text":"Performs workflow obtain action logs:","code":""},{"path":"https://arthur-shaw.github.io/susoflows/reference/get_all_user_logs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtains action logs for all interviewer users — get_all_user_logs","text":"","code":"get_all_user_logs(   start,   end,   server = Sys.getenv(\"SUSO_SERVER\"),   workspace = Sys.getenv(\"SUSO_WORKSPACE\"),   user = Sys.getenv(\"SUSO_USER\"),   password = Sys.getenv(\"SUSO_PASSWORD\") )"},{"path":"https://arthur-shaw.github.io/susoflows/reference/get_all_user_logs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtains action logs for all interviewer users — get_all_user_logs","text":"start Character vector. Date YYY-MM-DD format end Character vector. Date YYY-MM-DD format server Full server web address (e.g., https://demo.mysurvey.solutions, https://.domain) workspace Character. Workspace whose action logs get. user API user name password API password","code":""},{"path":"https://arthur-shaw.github.io/susoflows/reference/get_all_user_logs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtains action logs for all interviewer users — get_all_user_logs","text":"Data frame.","code":""},{"path":"https://arthur-shaw.github.io/susoflows/reference/get_all_user_logs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Obtains action logs for all interviewer users — get_all_user_logs","text":"Obtain list interviewers Fetch action logs interviewers Contains action log columns: time event (Time) description event (UserId). Also contains identifier user: UserID, GUID can used add user name. Rows correspond events action log. NA values Time Message mean actions action log start end dates used obtain action logs.","code":""},{"path":"https://arthur-shaw.github.io/susoflows/reference/get_last_sync_dates.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the last sync date for each interviewer — get_last_sync_dates","title":"Compute the last sync date for each interviewer — get_last_sync_dates","text":"Conducts full workflow get last sync date interviewer:","code":""},{"path":"https://arthur-shaw.github.io/susoflows/reference/get_last_sync_dates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the last sync date for each interviewer — get_last_sync_dates","text":"","code":"get_last_sync_dates(   start,   end,   server = Sys.getenv(\"SUSO_SERVER\"),   workspace = Sys.getenv(\"SUSO_WORKSPACE\"),   user = Sys.getenv(\"SUSO_USER\"),   password = Sys.getenv(\"SUSO_PASSWORD\") )"},{"path":"https://arthur-shaw.github.io/susoflows/reference/get_last_sync_dates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the last sync date for each interviewer — get_last_sync_dates","text":"start Character vector. Date YYY-MM-DD format end Character vector. Date YYY-MM-DD format server Full server web address (e.g., https://demo.mysurvey.solutions, https://.domain) workspace Character. Workspace whose action logs get. user API user name password API password","code":""},{"path":"https://arthur-shaw.github.io/susoflows/reference/get_last_sync_dates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the last sync date for each interviewer — get_last_sync_dates","text":"Data frame consisting one user action log.","code":""},{"path":"https://arthur-shaw.github.io/susoflows/reference/get_last_sync_dates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute the last sync date for each interviewer — get_last_sync_dates","text":"Obtain list interviewers Fetch action logs interviewers Determine last sync date interviewer Returns data frame. Columns contain Contains user ID (UserId) last sync date (last_sync_date). Rows correspond interviewers. NA last_sync_date mean sync action identified action log–start end dates used obtain action logs.","code":""},{"path":"https://arthur-shaw.github.io/susoflows/reference/unzip_to_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Unpack all zip files found in directory to same-named sub-directory — unzip_to_dir","title":"Unpack all zip files found in directory to same-named sub-directory — unzip_to_dir","text":"Applies unpack_zip_to_dir() zip files directory","code":""},{"path":"https://arthur-shaw.github.io/susoflows/reference/unzip_to_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unpack all zip files found in directory to same-named sub-directory — unzip_to_dir","text":"","code":"unzip_to_dir(dir)"},{"path":"https://arthur-shaw.github.io/susoflows/reference/unzip_to_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unpack all zip files found in directory to same-named sub-directory — unzip_to_dir","text":"dir Character. Directory zip files can found","code":""},{"path":"https://arthur-shaw.github.io/susoflows/reference/unzip_to_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unpack all zip files found in directory to same-named sub-directory — unzip_to_dir","text":"Side-effect creating folder zip unpacking contents .","code":""},{"path":"https://arthur-shaw.github.io/susoflows/news/index.html","id":"susoflows-021","dir":"Changelog","previous_headings":"","what":"susoflows 0.2.1","title":"susoflows 0.2.1","text":"Requires susoapi version fixes certain interactions GraphQL API–notably getting questionnaires.","code":""},{"path":"https://arthur-shaw.github.io/susoflows/news/index.html","id":"susoflows-020","dir":"Changelog","previous_headings":"","what":"susoflows 0.2.0","title":"susoflows 0.2.0","text":"Adds functions perform operations files downloaded Survey Solutions: Delete stale (data) files previous download: download_in_dir() Unpack zip archives directory bearing name file: unzip_to_dir()","code":""},{"path":"https://arthur-shaw.github.io/susoflows/news/index.html","id":"susoflows-010","dir":"Changelog","previous_headings":"","what":"susoflows 0.1.0","title":"susoflows 0.1.0","text":"Draw workspace environment variables, requires susoapi >= 0.2.0. Add hex sticker","code":""}]
